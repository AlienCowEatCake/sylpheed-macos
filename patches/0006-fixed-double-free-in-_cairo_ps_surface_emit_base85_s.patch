From 8f15bbf327adac48262e6fe329baf76581a42a73 Mon Sep 17 00:00:00 2001
From: Ayman El Didi <ayman@eldidi.org>
Date: Wed, 20 Apr 2022 15:11:14 -0600
Subject: [PATCH 6/9] fixed double free in _cairo_ps_surface_emit_base85_string

When taking the CAIRO_PS_COMPRESS_DEFLATE branch of the switch
statement in _cairo_ps_surface_emit_base85_string, memory is freed
a second time when closing the deflate_stream fails after performing a
write.

The status is now simply returned instead of attempting to free it
again.

(cherry picked from commit a154424db3b4c7b906d3e472f57a57afd7c1c1c9)
---
 src/cairo-ps-surface.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/src/cairo-ps-surface.c b/src/cairo-ps-surface.c
index 41f635d56..35e6396c8 100644
--- a/src/cairo-ps-surface.c
+++ b/src/cairo-ps-surface.c
@@ -2485,6 +2485,7 @@ _cairo_ps_surface_emit_base85_string (cairo_ps_surface_t    *surface,
     unsigned char *data_compressed;
     unsigned long data_compressed_size;
     cairo_status_t status, status2;
+    cairo_status_t this_cannot_be_handled;
 
     if (use_strings)
 	string_array_stream = _base85_strings_stream_create (surface->stream);
@@ -2502,6 +2503,7 @@ _cairo_ps_surface_emit_base85_string (cairo_ps_surface_t    *surface,
 	return _cairo_output_stream_destroy (base85_stream);
     }
 
+    status = 0;
     switch (compress) {
 	case CAIRO_PS_COMPRESS_NONE:
 	    _cairo_output_stream_write (base85_stream, data, length);
@@ -2513,8 +2515,8 @@ _cairo_ps_surface_emit_base85_string (cairo_ps_surface_t    *surface,
 	    data_compressed_size = length;
 	    data_compressed = _cairo_lzw_compress ((unsigned char*)data, &data_compressed_size);
 	    if (unlikely (data_compressed == NULL)) {
-		status = _cairo_output_stream_destroy (string_array_stream);
-		status = _cairo_output_stream_destroy (base85_stream);
+		this_cannot_be_handled = _cairo_output_stream_destroy (string_array_stream);
+		this_cannot_be_handled = _cairo_output_stream_destroy (base85_stream);
 		return _cairo_error (CAIRO_STATUS_NO_MEMORY);
 	    }
 	    _cairo_output_stream_write (base85_stream, data_compressed, data_compressed_size);
@@ -2529,9 +2531,9 @@ _cairo_ps_surface_emit_base85_string (cairo_ps_surface_t    *surface,
 	    _cairo_output_stream_write (deflate_stream, data, length);
 	    status = _cairo_output_stream_destroy (deflate_stream);
 	    if (unlikely (status)) {
-		status2 = _cairo_output_stream_destroy (string_array_stream);
-		status2 = _cairo_output_stream_destroy (base85_stream);
-		return _cairo_output_stream_destroy (deflate_stream);
+		this_cannot_be_handled = _cairo_output_stream_destroy (string_array_stream);
+		this_cannot_be_handled = _cairo_output_stream_destroy (base85_stream);
+		return status;
 	    }
 	    break;
     }
-- 
2.32.1 (Apple Git-133)

